export '*'

struct TrieNode
{
    TrieNode^[26] children
    int val
}

class Trie
{
    TrieNode^ root
    int default_val

    init()
    {
        self.root = new TrieNode
        self.default_val = 0-1
    }

    func put(byte* key, int val)
    {
        var n = self.root
        for byte c = key!; c; (key += 1) && (c = key!)
        {
            c -= 97
            if n.children[c]
            {
                n = n.children[c]
                continue
            }

            n.children[c] = new TrieNode
            n = n.children[c]
            n.val = self.default_val
        }

        n.val = val
    }

    func get(byte* key) : int
    {
        var n = self.root
        for byte c = key!; c; (key += 1) && (c = key!)
        {
            c -= 97
            if !n.children[c]
                return 0-1
            n = n.children[c]
        }

        return n.val
    }
}

